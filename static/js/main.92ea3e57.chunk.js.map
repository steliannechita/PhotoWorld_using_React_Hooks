{"version":3,"sources":["Context.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","pages/Photos.js","utils/index.js","App.js","index.js"],"names":["Context","React","createContext","Header","cartItems","useContext","to","length","className","useHover","useState","hovered","setHovered","ref","useRef","enter","leave","useEffect","currentEl","current","addEventListener","removeEventListener","CartItem","item","removeFromCart","trashButtonClassName","onClick","src","url","width","alt","Cart","ordered","setOrdered","setCartItems","cartItemsElements","map","key","id","totalPrice","toLocaleString","style","currency","orderingButtonText","setTimeout","alert","Image","img","toggleIsFavorited","addToCart","heartIcon","isFavorite","addCartIcon","some","image","target","rel","href","Photos","photos","allPhotos","index","i","App","exact","path","ReactDOM","render","children","setAllPhotos","fetch","then","res","json","data","Provider","value","updatedPhotos","prevState","concat","itemToRemove","prevItems","filter","document","getElementById"],"mappings":"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","file":"static/js/main.92ea3e57.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nfunction ContextProvider({ children }) {\r\n  const [allPhotos, setAllPhotos] = useState([]);\r\n  const [cartItems, setCartItems] = useState([])\r\n  const url =\r\n    \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => setAllPhotos(data));\r\n  }, []);\r\n\r\n  const addToCart = image =>{\r\n    setCartItems(prevState=>prevState.concat(image))\r\n    \r\n}\r\nconst removeFromCart=itemToRemove=> {\r\n  setCartItems(prevItems => prevItems.filter(item=>item.id!==itemToRemove.id)) \r\n}\r\n\r\n  const toggleIsFavorited = id => {\r\n    const updatedPhotos = allPhotos.map(image => {\r\n      if (image.id === id) {\r\n        return { ...image, isFavorite: !image.isFavorite };\r\n      }\r\n      return image;\r\n    });\r\n    setAllPhotos(updatedPhotos);\r\n    };\r\n    \r\n  return (\r\n    <Context.Provider value={{ allPhotos, toggleIsFavorited, addToCart, cartItems, removeFromCart, setCartItems }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider, Context };\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../Context\";\r\n\r\nfunction Header() {\r\n  const { cartItems } = useContext(Context);\r\n  return (\r\n    <header>\r\n      <Link to=\"/\">\r\n        <h2>Pic Some</h2>\r\n      </Link>\r\n      <Link to=\"/cart\">\r\n        {cartItems.length === 0 ? (\r\n          <i className=\"ri-shopping-cart-line ri-fw ri-2x\"></i>\r\n        ) : (\r\n          <i className=\"ri-shopping-cart-fill ri-fw ri-2x\"></i>\r\n        )}\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nconst useHover = () => {\r\n  const [hovered, setHovered] = useState(false);\r\n  const ref = useRef(null);\r\n  \r\n  const enter = () => {\r\n    setHovered(true);\r\n  };\r\n  const leave = () => {\r\n    setHovered(false);\r\n  };\r\n  useEffect(() => {\r\n    const currentEl =ref.current\r\n    currentEl.addEventListener(\"mouseenter\", enter);\r\n    currentEl.addEventListener(\"mouseleave\", leave);\r\n    return () => {\r\n        currentEl.removeEventListener(\"mouseenter\", enter);\r\n        currentEl.removeEventListener(\"mouseleave\", leave);\r\n    };\r\n  }, []);\r\n  return [hovered,ref];\r\n};\r\n\r\nexport default useHover;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport PropTypes from \"prop-types\";\r\nimport useHover from '../hooks/useHover'\r\nconst CartItem = ({ item }) => {\r\n  const { removeFromCart } = useContext(Context);\r\n  const [hovered, ref] = useHover();\r\n  let trashButtonClassName = hovered\r\n    ? \"ri-delete-bin-fill\"\r\n    : \"ri-delete-bin-line\";\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <i\r\n        onClick={() => removeFromCart(item)}\r\n        ref={ref}\r\n        className={trashButtonClassName}\r\n      ></i>\r\n      <img src={item.url} width=\"130px\" alt=\"small img\" />\r\n      <p>Â£1.99</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nCartItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    url: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport CartItem from \"../components/CartItem\";\r\n\r\nfunction Cart() {\r\n  const [ordered, setOrdered] = useState(false);\r\n  const { cartItems, setCartItems } = useContext(Context);\r\n  const cartItemsElements = cartItems.map(item => (\r\n    <CartItem key={item.id} item={item} />\r\n  ));\r\n  const pricePerUnit = 1.99;\r\n  const totalPrice = (cartItems.length * pricePerUnit).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"GBP\"\r\n  });\r\n  let orderingButtonText = ordered ? \"Ordering...\" : \"Place order\";\r\n  const placeOrder = () => {\r\n    if (cartItems.length) {\r\n      setOrdered(true);\r\n      setTimeout(() => {\r\n        alert(\"Order placed!\");\r\n        setOrdered(false);\r\n        setCartItems([]);\r\n      }, 3000);\r\n    } else {\r\n      alert(\"Please add items to the cart before ordering!\");\r\n    }\r\n  };\r\n  return (\r\n    <main className=\"cart-page\">\r\n      <h1>Check out</h1>\r\n      {cartItemsElements}\r\n      <p className=\"total-cost\">Total: {totalPrice}</p>\r\n      <div className=\"order-button\">\r\n        {cartItems.length > 0 ? (\r\n          <button onClick={placeOrder}>{orderingButtonText}</button>\r\n        ) : (\r\n          <p>You have no items in the cart</p>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport PropTypes from \"prop-types\";\r\nimport useHover from \"../hooks/useHover\";\r\n\r\nfunction Image({ className, img }) {\r\n  const [hovered, ref] = useHover();\r\n  const {\r\n    toggleIsFavorited,\r\n    addToCart,\r\n    cartItems,\r\n    removeFromCart\r\n  } = useContext(Context);\r\n\r\n  const heartIcon = img.isFavorite ? (\r\n    <i\r\n      onClick={() => toggleIsFavorited(img.id)}\r\n      className=\"ri-heart-fill favorite\"\r\n    ></i>\r\n  ) : hovered ? (\r\n    <i\r\n      className=\"ri-heart-line favorite\"\r\n      onClick={() => toggleIsFavorited(img.id)}\r\n    ></i>\r\n  ) : null;\r\n\r\n  const added = cartItems.some(image => image.id === img.id);\r\n\r\n  const addCartIcon = added ? (\r\n    <i\r\n      onClick={() => removeFromCart(img)}\r\n      className=\"ri-shopping-cart-fill cart\"\r\n    ></i>\r\n  ) : (\r\n    hovered && (\r\n      <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\r\n    )\r\n  );\r\n  return (\r\n    <div ref={ref} className={`${className} image-container`}>\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={img.url}>\r\n        <img src={img.url} className=\"image-grid\" alt=\"item\" />\r\n      </a>\r\n      {\r\n        <div>\r\n          {heartIcon}\r\n          {addCartIcon}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\nImage.propTypes = {\r\n  className: PropTypes.string,\r\n  img: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    isFavorite: PropTypes.bool.isRequired\r\n  })\r\n};\r\n\r\nexport default Image;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport Image from \"../components/Image\";\r\nimport { getClass } from \"../utils\";\r\n\r\nfunction Photos() {\r\n  const { allPhotos } = useContext(Context);\r\n  const photos = allPhotos.map((image, index) => (\r\n    <Image key={image.id} img={image} className={getClass(index)} />\r\n  ));\r\n\r\n  return <main className=\"photos\">{photos}</main>;\r\n}\r\n\r\nexport default Photos;\r\n","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React from \"react\"\r\nimport {Switch, Route} from \"react-router-dom\"\r\n\r\nimport Header from \"./components/Header\"\r\nimport Cart from \"./pages/Cart\"\r\nimport Photos from \"./pages/Photos\"\r\n\r\nfunction App() {    \r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Photos />\r\n                </Route>\r\n                \r\n                <Route path=\"/cart\">\r\n                    <Cart />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport {BrowserRouter as Router} from \"react-router-dom\"\r\n\r\nimport {ContextProvider} from \"./Context\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </ContextProvider>, \r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}